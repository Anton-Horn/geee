DONE:
- resizing
- delete vulkan objects
- fix all warnings!
- Create Uniformbuffer/Dynamic Uniform Buffer class
- create gooch renderer/lighting
- render Mandelbrot set
- refactor quad renderer
- destroy vulkan objects 
- fix vertex data
- warnings
- github page, read me
- add entt, scene system
- Quad Renderer UI
- basic editor gui
- implement basic renderer/application multithreading
- correct semaphore stage flags when submiting, imgui, renderer
- resizing, viewport image, imgui semaphore, command buffers and mabye more

CURRENT:

- main thread queue
- Asset Manager

TODO:
- Implement gltf model loading 2.0: create Model Importer
- Physically Based Rendering
- input
- move cgltf
- refactor renderer data
- command buffer situtation, multithreading each renderer, thread safe descriptor pools
- basic shader/material system, pipeline refactor
- dynamic sampler creation
- dont include spdlog in runtime

RECOURCES:

https://paroj.github.io/gltut/Illumination/Tut09%20Normal%20Transformation.html